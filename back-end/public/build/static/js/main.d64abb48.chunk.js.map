{"version":3,"sources":["routes/pages/helpers/routes-names.js","contexts/auth-context.js","routes/api.js","components/loading/page-loading.js","routes/pages/helpers/fragment-support-switch.js","routes/pages/shared.js","components/forms/sign-in-form.js","pages/sign-in-page.js","routes/pages/private.js","routes/pages/index.js","routes/pages/public.js","App.js","serviceWorker.js","index.js"],"names":["homePageRoute","signInPageRoute","interactiveImagePageRoute","uploadImageRoute","AuthContext","React","createContext","AuthProvider","props","loadingUserData","useState","data","setData","useCookies","userCookie","setUserCookie","removeUserCookie","Provider","value","signin","email","password","fetch","signInApiRoute","method","headers","Accept","body","JSON","stringify","user","then","response","text","parsedData","parse","error","signout","window","location","pathname","getUser","userCached","useAuth","useContext","interactiveImageURLApiRoute","useStyles","makeStyles","loading","height","width","top","position","display","flexDirection","justifyContent","alignItems","CircularIndeterminate","classes","className","FragmentSupportingSwitch","flattenedChildren","flatten","target","children","Children","forEach","child","isValidElement","type","Fragment","push","createElement","apply","Switch","concat","NotFoundPage","lazy","theme","form","marginTop","spacing","submit","margin","SignInForm","onSubmit","setEmail","setPassword","noValidate","e","TextField","variant","required","fullWidth","id","label","name","autoComplete","onChange","currentTarget","autoFocus","FormControlLabel","control","Checkbox","color","Button","Grid","container","item","xs","Link","href","Copyright","Typography","align","Date","getFullYear","paper","avatar","backgroundColor","palette","secondary","main","SignIn","auth","Container","component","maxWidth","CssBaseline","Avatar","preventDefault","Box","mt","HomePage","LeafletInteractivePage","UploadImagePage","PrivateRoute","Component","rest","render","to","state","from","Routes","fallback","exact","path","PublicRoutes","PrivateRoutes","App","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.d64abb48.chunk.js","sourcesContent":["/**\n * Listing all FE Pages routes here\n */\n\nexport const homePageRoute = '/';\nexport const signInPageRoute = '/sign-in';\nexport const interactiveImagePageRoute = '/interactive-image';\nexport const uploadImageRoute = '/upload-image'","import React, { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { signInApiRoute } from \"../routes/api\";\nimport { signInPageRoute } from \"../routes/pages/helpers/routes-names\";\n\nconst userCookieName = \"userCookie\";\nconst AuthContext = React.createContext();\n\nfunction AuthProvider(props) {\n  const { loadingUserData = false } = { ...props };\n  const [data, setData] = useState({});\n  const [userCookie, setUserCookie, removeUserCookie] = useCookies([\n    userCookieName,\n  ]);\n\n  if (loadingUserData) {\n    return <p>Loading...</p>;\n  }\n  const signin = ({email, password}) => {\n    // TODO: Create a centralized service\n    fetch(signInApiRoute, {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          email,\n          password\n        },\n      }),\n    })\n      .then(function (response) {\n        return response.text();\n      })\n      .then(function (data) {\n        const parsedData = JSON.parse(data);\n        if (parsedData.user) {\n          const user = parsedData.user;\n          setData({ user });\n          setUserCookie(userCookieName, user);\n        } else {\n          if (parsedData.error) {\n            \n          }\n        }\n      });\n  };\n  const signout = () => {\n    // TODO: Send hit to logout from server\n    setData({});\n    removeUserCookie(userCookieName);\n    window.location.pathname = signInPageRoute;\n  };\n  const getUser = () => {\n    const userCached = userCookie[userCookieName];\n    const user = data?.user || userCached || null;\n    return user;\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{ data, signin, signout, getUser }}\n      {...props}\n    />\n  );\n}\nconst useAuth = () => React.useContext(AuthContext);\nexport { AuthProvider, useAuth };\n","// Add here all routes to the Server\n\nexport const signInApiRoute = '/api/auth/sign-in';\nexport const interactiveImageURLApiRoute = '/api/images/get';","// import React from \"react\";\n\n\n\n\n// export default function PageLoading() {\n//   const classes = useStyles();\n//   return <div className={classes.loading}>Loading...</div>;\n// }\n\nimport React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles({\n  loading: {\n    height: \"100vh\",\n    width: \"100%\",\n    top: 0,\n    position: \"fixed\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n\nexport default function CircularIndeterminate() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.loading}>\n      <CircularProgress />\n      <p>Loading...</p>\n    </div>\n  );\n}","import React, { Fragment } from \"react\";\nimport { Switch } from \"react-router-dom\";\n\nexport default function FragmentSupportingSwitch({ children }) {\n    const flattenedChildren = [];\n    flatten(flattenedChildren, children);\n    return React.createElement.apply(\n      React,\n      [Switch, null].concat(flattenedChildren)\n    );\n  }\n  function flatten(target, children) {\n    React.Children.forEach(children, (child) => {\n      if (React.isValidElement(child)) {\n        if (child.type === Fragment) {\n          flatten(target, child.props.children);\n        } else {\n          target.push(child);\n        }\n      }\n    });\n  }","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\n// Pages, Lazy load them :3\nconst NotFoundPage = React.lazy(() => import('../../pages/404-page'));\n// Add Shared routes (for both auth and none auth) here\nexport default function SharedRoutes() {\n  return (\n    <>\n      <Route component={NotFoundPage} />\n    </>\n  );\n}\n","import React, {useState} from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignInForm({onSubmit}) {\n  const classes = useStyles();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  return (\n    <form className={classes.form} noValidate onSubmit={(e) => {onSubmit({e, email, password})}}>\n      <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        id=\"email\"\n        label=\"Email Address\"\n        name=\"email\"\n        autoComplete=\"email\"\n        value={email}\n        onChange={(e) => setEmail(e.currentTarget.value)}\n        autoFocus\n      />\n      <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        name=\"password\"\n        label=\"Password\"\n        type=\"password\"\n        id=\"password\"\n        autoComplete=\"current-password\"\n        value={password}\n        onChange={(e) => setPassword(e.currentTarget.value)}\n      />\n      <FormControlLabel\n        control={<Checkbox value=\"remember\" color=\"primary\" />}\n        label=\"Remember me\"\n      />\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n      >\n        Sign In\n      </Button>\n      <Grid container>\n        <Grid item xs>\n          <Link href=\"#\" variant=\"body2\">\n            Forgot password?\n          </Link>\n        </Grid>\n        <Grid item>\n          <Link href=\"#\" variant=\"body2\">\n            {\"Don't have an account? Sign Up\"}\n          </Link>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport SignInForm from '../components/forms/sign-in-form';\nimport { useAuth } from '../contexts/auth-context';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"/\">\n        Virtual Microscope\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const auth = useAuth();\n\n  function onSubmit({e, email, password}) {\n    e.preventDefault();\n    auth.signin({email, password});\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n\n        <SignInForm onSubmit={onSubmit} />\n\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport {\n  homePageRoute,\n  signInPageRoute,\n  interactiveImagePageRoute,\n  uploadImageRoute\n} from \"./helpers/routes-names\";\n\n// Pages Lazy load them :3\nconst HomePage = React.lazy(() => import('../../pages/home-page'));\nconst LeafletInteractivePage = React.lazy(() => import('../../pages/interactive-image-page'));\nconst UploadImagePage = React.lazy(() => import('../../pages/upload-image-page'));\n\nfunction PrivateRoute({ component: Component, user, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        user ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: signInPageRoute, state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n}\n// Add Private Routes Here\nexport default function PrivateRoutes({ user }) {\n  return (\n    <>\n      <PrivateRoute\n        exact\n        user={user}\n        path={homePageRoute}\n        component={HomePage}\n      />\n      <PrivateRoute\n        exact\n        path={interactiveImagePageRoute}\n        user={user}\n        component={LeafletInteractivePage}\n      />\n      <PrivateRoute\n        exact\n        path={uploadImageRoute}\n        user={user}\n        component={UploadImagePage}\n      />\n    </>\n  );\n}\n","import React, { Suspense } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport FragmentSupportingSwitch from \"./helpers/fragment-support-switch\";\nimport { useAuth } from \"../../contexts/auth-context\";\nimport PageLoading from '../../components/loading/page-loading';\nimport SharedRoutes from \"./shared\";\nimport PublicRoutes from \"./public\";\nimport PrivateRoutes from \"./private\";\n\nexport default function Routes() {\n  const user = useAuth().getUser();\n\n  return (\n    <Router>\n      <Suspense fallback={<PageLoading />}>\n        <FragmentSupportingSwitch>\n          {PublicRoutes({ user })}\n          {PrivateRoutes({ user })}\n          {SharedRoutes()}\n        </FragmentSupportingSwitch>\n      </Suspense>\n    </Router>\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { homePageRoute, signInPageRoute } from \"./helpers/routes-names\";\n\n// Pages, I do not need to lazy load this one, since it is ok to wait to sign in.\nimport SignInPage from \"../../pages/sign-in-page\";\n\n// Add Public routes here\nexport default function PublicRoutes({ user }) {\n  return (\n    <>\n      <Route\n        exact\n        path={signInPageRoute}\n        render={(props) =>\n          user ? (\n            <Redirect\n              to={{ pathname: homePageRoute, state: { from: props.location } }}\n            />\n          ) : (\n            <SignInPage />\n          )\n        }\n      />\n    </>\n  );\n}\n","import React from \"react\";\nimport { AuthProvider } from \"./contexts/auth-context\";\nimport Routes from \"./routes/pages\";\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <AuthProvider>\n      <Routes />\n    </AuthProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}